import React, { createContext, useContext, useState, useEffect } from "react";

const LanguageContext = createContext();

const translations = {
  en: {
    app: {
      name: "TRACKEXPENSES",
    },
    common: {
      dashboard: "Dashboard",
      expenses: "Expenses",
      incomes: "Incomes",
      users: "Users",
      settings: "Settings",
      logout: "Logout",
      save: "Save",
      cancel: "Cancel",
      search: "Search",
      filter: "Filter",
      add: "Add",
      total: "Total",
      overview: "Overview",
      amount: "Amount",
      date: "Date",
      category: "Category",
      description: "Description",
      source: "Source",
      status: "Status",
      actions: "Actions",
      login: "Login",
      searchExpenses: "Search expenses...",
      searchIncomes: "Search incomes...",
      expense: "Expense",
      income: "Income",
      expensesOverview: "Expenses Overview",
      incomeOverview: "Income Overview",
      totalExpenses: "Total Expenses",
      totalIncome: "Total Income",
      allRightsReserved: "All rights reserved",
      privacyPolicy: "Privacy Policy",
      termsOfService: "Terms of Service",
      contact: "Contact",
      name: "Name",
      firstName: "First Name",
      familyName: "Family Name",
      email: "Email",
      user: "User",
      add_user: "Add a user",
      clear: "Clear",
      all: "All",
      allGroups: "All Groups",
      searchUsers: "Type to search users...",
      fullName: "Full Name",
      group: "Group",
      birthday: "Birthday",
      earnings: "Earnings",
      earning: "Earning",
      calendar: "Calendar",
      options: "Options",
      option: "option",
      forgotPassword: "Forgot Password?",
      password: "Password",
      noAccount: "Don't have an account? Sign Up",
      back: "Back",
      value: "Value",
      notpayed: "Remaining",
      premium: "Premium",
      editProfile: "Edit Profile",
      navigation: "Navigation",
      admin: "Admin",
      adminGroup: "Admin Group",
      account: "Account",
      menu: "Menu",
      save_Changes: "Save Changes",
      phone_number: "Phone number",
      save_Change: "Save Changes",
      new_Password: "New Password",
      member: "Member",
      not_provided: "Not Provided",
      signingIn: "Entering..."

    },
    settings: {
      appearance: "Appearance",
      themeMode: "Theme Mode",
      light: "Light",
      dark: "Dark",
      preferences: "Preferences",
      language: "Language",
      notifications: "Notifications",
      security: "Security",
    },
    categories: {
      food: "Food",
      transport: "Transport",
      entertainment: "Entertainment",
      bills: "Bills",
      others: "Others",
      salary: "Salary",
      freelance: "Freelance",
      investments: "Investments",
    },
    auth: {
      loginTitle: "LOGIN",
      forgotTitle: "Forgot your password?",
      forgotSubtitle:
        "No worries! Enter your email and we’ll send you a reset link.",
      sendEmail: "Send email",
      sending: "Sending...",
      rememberPassword: " Remember your password?",
      backToSignIn: "Back to sign in",
      firstName: "First Name",
      familyName: "Family Name",
      confirmPassword: "Confirm Password",
      next: "Next",
      alreadyAccount: "Already have an account? Sign in",
      createTitle: "Create your account",
      createSubtitle: "Just one more step to complete your registration",
      loginSubtitle: "Enter your credentials to access your account",
      firstNamePH: "Enter your First Name...",
      familyNamePH: "Enter your First Name...",
      date: "BirthDay",
      phone: "Phone",
      CodeInvite: "Code Invite",
      inviteCodePH: "Group Code",
      inviteHelp:
        "You can ask your financial administrator that is already registered to give you. <br /><b>Leave blank if you don't have a group code (you can add or change anytime)</b>",
      createAccount: "Create Account!",
    },
    profile: {
      title: "Profile",
      edit_Profile: "Edit Profile",
      no_Group_Members: "No group members",
      group_Members: "Group members",
      personal_information: "Personal Information",
      click_To_Change_Picture: "Click on your profile picture to change it",
      not_provided: "Not provided",
      group_information: "Group Information",
      group_name: "Group Name",
      invite_code: "Invite Code",
      copy_invite_code: "Copy invite code",
      group_role: "Group Role",
      group_members: "Group Members",
      no_group_members: "No group members",
      remove_member: "Remove member",
      password_leave_empty: "Leave empty to keep current password",
    },
    placeholders: {
      email: "Enter your email...",
      password: "Enter your password...",
    },
    session:{
      almostExpire: "Session almost expiring",
      chose_Renew_Or_Logout:"Do you want to renew your session or end it?",
      time_Left: "Remaining time",
      logout: "Log out",
      renew: "Renew"
    }
  },
  pt: {
    common: {
      dashboard: "Painel",
      expenses: "Despesas",
      incomes: "Receitas",
      users: "Utilizadores",
      settings: "Configurações",
      logout: "Sair",
      save: "Salvar",
      cancel: "Cancelar",
      search: "Pesquisar",
      filter: "Filtrar",
      add: "Adicionar",
      total: "Total",
      overview: "Visão Geral",
      amount: "Valor",
      date: "Data",
      category: "Categoria",
      description: "Descrição",
      source: "Fonte",
      status: "Status",
      actions: "Ações",
      login: "Entrar",
      searchExpenses: "Pesquisar despesas...",
      searchIncomes: "Pesquisar receitas...",
      expense: "Despesa",
      income: "Receita",
      expensesOverview: "Visão Geral das Despesas",
      incomeOverview: "Visão Geral das Receitas",
      totalExpenses: "Total de Despesas",
      totalIncome: "Total de Receitas",
      allRightsReserved: "Todos os direitos reservados",
      privacyPolicy: "Política de Privacidade",
      termsOfService: "Termos de Serviço",
      contact: "Contato",
      name: "Nome",
      email: "E-mail",
    },
    settings: {
      appearance: "Aparência",
      themeMode: "Modo do Tema",
      light: "Claro",
      dark: "Escuro",
      preferences: "Preferências",
      language: "Idioma",
      notifications: "Notificações",
      security: "Segurança",
    },
    categories: {
      food: "Alimentação",
      transport: "Transporte",
      entertainment: "Entretenimento",
      bills: "Contas",
      others: "Outros",
      salary: "Salário",
      freelance: "Freelancer",
      investments: "Investimentos",
    },
  },
  es: {
    common: {
      dashboard: "Panel",
      expenses: "Gastos",
      incomes: "Ingresos",
      users: "Usuarios",
      settings: "Ajustes",
      logout: "Cerrar sesión",
      save: "Guardar",
      cancel: "Cancelar",
      search: "Buscar",
      filter: "Filtrar",
      add: "Añadir",
      total: "Total",
      overview: "Resumen",
      amount: "Monto",
      date: "Fecha",
      category: "Categoría",
      description: "Descripción",
      source: "Fuente",
      status: "Estado",
      actions: "Acciones",
      login: "Iniciar sesión",
      searchExpenses: "Buscar gastos...",
      searchIncomes: "Buscar ingresos...",
      expense: "Gasto",
      income: "Ingreso",
      expensesOverview: "Resumen de Gastos",
      incomeOverview: "Resumen de Ingresos",
      totalExpenses: "Total de Gastos",
      totalIncome: "Total de Ingresos",
      allRightsReserved: "Todos los derechos reservados",
      privacyPolicy: "Política de Privacidad",
      termsOfService: "Términos de Servicio",
      contact: "Contacto",
      name: "Nombre",
      email: "Correo electrónico",
    },
    settings: {
      appearance: "Apariencia",
      themeMode: "Modo de tema",
      light: "Claro",
      dark: "Oscuro",
      preferences: "Preferencias",
      language: "Idioma",
      notifications: "Notificaciones",
      security: "Seguridad",
    },
    categories: {
      food: "Comida",
      transport: "Transporte",
      entertainment: "Entretenimiento",
      bills: "Facturas",
      others: "Otros",
      salary: "Salario",
      freelance: "Freelance",
      investments: "Inversiones",
    },
  },
  // fr: {
  //   common: {
  //     dashboard: "Tableau de bord",
  //     expenses: "Dépenses",
  //     incomes: "Revenus",
  //     users: "Utilisateurs",
  //     settings: "Paramètres",
  //     logout: "Déconnexion",
  //     save: "Enregistrer",
  //     cancel: "Annuler",
  //     search: "Rechercher",
  //     filter: "Filtrer",
  //     add: "Ajouter",
  //     total: "Total",
  //     overview: "Aperçu",
  //     amount: "Montant",
  //     date: "Date",
  //     category: "Catégorie",
  //     description: "Description",
  //     source: "Source",
  //     status: "Statut",
  //     actions: "Actions",
  //     login: "Connexion",
  //     searchExpenses: "Rechercher des dépenses...",
  //     searchIncomes: "Rechercher des revenus...",
  //     expense: "Dépense",
  //     income: "Revenu",
  //     expensesOverview: "Aperçu des Dépenses",
  //     incomeOverview: "Aperçu des Revenus",
  //     totalExpenses: "Total des Dépenses",
  //     totalIncome: "Total des Revenus",
  //     allRightsReserved: "Tous droits réservés",
  //     privacyPolicy: "Politique de Confidentialité",
  //     termsOfService: "Conditions d'Utilisation",
  //     contact: "Contact",
  //     name: "Nom",
  //     email: "E-mail",
  //   },
  //   settings: {
  //     appearance: "Apparence",
  //     themeMode: "Mode thème",
  //     light: "Clair",
  //     dark: "Sombre",
  //     preferences: "Préférences",
  //     language: "Langue",
  //     notifications: "Notifications",
  //     security: "Sécurité",
  //   },
  //   categories: {
  //     food: "Nourriture",
  //     transport: "Transport",
  //     entertainment: "Divertissement",
  //     bills: "Factures",
  //     others: "Autres",
  //     salary: "Salaire",
  //     freelance: "Freelance",
  //     investments: "Investissements",
  //   },
  // },
};

export function LanguageProvider({ children }) {
  const [language, setLanguage] = useState(() => {
    const savedLanguage = localStorage.getItem("language");
    return savedLanguage || "en";
  });

  useEffect(() => {
    localStorage.setItem("language", language);
    document.documentElement.lang = language;
  }, [language]);

  const t = (key) => {
    const keys = key.split(".");
    let value = translations[language];
    for (const k of keys) {
      value = value?.[k];
    }
    return value || key;
  };

  return (
    <LanguageContext.Provider value={{ language, setLanguage, t }}>
      {children}
    </LanguageContext.Provider>
  );
}

export function useLanguage() {
  const context = useContext(LanguageContext);
  if (!context) {
    throw new Error("useLanguage must be used within a LanguageProvider");
  }
  return context;
}
